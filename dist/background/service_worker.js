class r{constructor(e="sync"){this.storageType=e}get(e){return new Promise((a,t)=>{chrome.storage[this.storageType].get(e,o=>{o||t(new Error("No storageObj")),a(o)})})}set(e){return new Promise((a,t)=>{chrome.storage[this.storageType].set(e,()=>{a()})})}}const i=async(s,e,a="GET")=>{const t={method:a,headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}};return await(await fetch(s,t)).json()},d=async()=>{const e=await new r("sync").get(["dex8JointapiKey","dex8JointapiUrl","databaseId","collectionName"]),a=e.dex8JointapiKey,t=e.dex8JointapiUrl,o=e.databaseId,n=e.collectionName||"general";return await i(`${t}/joint-api/mongo/${o}/${n}/list`,a)},p=async()=>{const e=await new r("sync").get(["dex8JointapiKey","dex8JointapiUrl","databaseId","collectionName"]),a=e.dex8JointapiKey,t=e.dex8JointapiUrl,o=e.databaseId,n=e.collectionName||"general";return await i(`${t}/joint-api/mongo/${o}/${n}/empty`,a,"DELETE")};chrome.runtime.onMessage.addListener(async(s,e,a)=>{console.log("[service_worker.js] request::",s);try{s.route==="joint-api/delete-all-data"&&await p();const t=await d();chrome.runtime.sendMessage({route:"saved-data",payload:t}).catch(o=>console.error("[service_worker.js]",o.message))}catch(t){console.error(t)}});
